{"ast":null,"code":"import { firestore } from '../../firebase/firebase.utils';\nconst FETCH_COLLECTIONS_START = 'FETCH_COLLECTIONS_START';\nconst FETCH_COLLECTIONS_SUCCESS = 'FETCH_COLLECTIONS_SUCCESS';\nconst FETCH_COLLECTIONS_FAIL = 'FETCH_COLLECTIONS_FAIL';\n\nconst fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START\n});\n\nconst fetchCollectionsSuccess = collectionsMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  collectionsMap\n});\n\nconst fetchCollectionsFail = errorMessage => ({\n  type: FETCH_COLLECTIONS_FAIL,\n  errorMessage\n}); // Async thunk action creator.\n\n\nconst fetchCollectionsAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // Dispatch updateCollections action.\n\n      updateCollections(collectionsMap); // Set loading state value to false.\n\n      this.setState(() => ({\n        loading: false\n      }));\n    });\n  };\n};\n\nexport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAIL };","map":{"version":3,"sources":["C:/projects/clothing/src/redux/actions/shop.js"],"names":["firestore","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAIL","fetchCollectionsStart","type","fetchCollectionsSuccess","collectionsMap","fetchCollectionsFail","errorMessage","fetchCollectionsAsync","dispatch","collectionRef","collection","onSnapshot","snapshot","convertCollectionsSnapshotToMap","updateCollections","setState","loading"],"mappings":"AAAA,SAASA,SAAT,QAA0B,+BAA1B;AAEA,MAAMC,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;;AAEA,MAAMC,qBAAqB,GAAG,OAAO;AACjCC,EAAAA,IAAI,EAAEJ;AAD2B,CAAP,CAA9B;;AAIA,MAAMK,uBAAuB,GAAGC,cAAc,KAAK;AAC/CF,EAAAA,IAAI,EAAEH,yBADyC;AAE/CK,EAAAA;AAF+C,CAAL,CAA9C;;AAKA,MAAMC,oBAAoB,GAAGC,YAAY,KAAK;AAC1CJ,EAAAA,IAAI,EAAEF,sBADoC;AAE1CM,EAAAA;AAF0C,CAAL,CAAzC,C,CAKA;;;AACA,MAAMC,qBAAqB,GAAG,MAAM;AAChC,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMR,cAAc,GAAGS,+BAA+B,CAACD,QAAD,CAAtD,CADuC,CAEvC;;AACAE,MAAAA,iBAAiB,CAACV,cAAD,CAAjB,CAHuC,CAIvC;;AACA,WAAKW,QAAL,CAAc,OAAO;AACjBC,QAAAA,OAAO,EAAE;AADQ,OAAP,CAAd;AAGH,KARD;AAUH,GAZD;AAaH,CAdD;;AAgBA,SAASlB,uBAAT,EAAkCC,yBAAlC,EAA6DC,sBAA7D","sourcesContent":["import { firestore } from '../../firebase/firebase.utils';\n\nconst FETCH_COLLECTIONS_START = 'FETCH_COLLECTIONS_START';\nconst FETCH_COLLECTIONS_SUCCESS = 'FETCH_COLLECTIONS_SUCCESS';\nconst FETCH_COLLECTIONS_FAIL = 'FETCH_COLLECTIONS_FAIL';\n\nconst fetchCollectionsStart = () => ({\n    type: FETCH_COLLECTIONS_START\n});\n\nconst fetchCollectionsSuccess = collectionsMap => ({\n    type: FETCH_COLLECTIONS_SUCCESS,\n    collectionsMap\n});\n\nconst fetchCollectionsFail = errorMessage => ({\n    type: FETCH_COLLECTIONS_FAIL,\n    errorMessage\n});\n\n// Async thunk action creator.\nconst fetchCollectionsAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            // Dispatch updateCollections action.\n            updateCollections(collectionsMap);\n            // Set loading state value to false.\n            this.setState(() => ({\n                loading: false\n            }));\n        });\n\n    }\n}\n\nexport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAIL };"]},"metadata":{},"sourceType":"module"}