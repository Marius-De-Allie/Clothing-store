{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\clothing\\\\src\\\\components\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport FormInput from './FormInput';\nimport CustomButton from './CustomButton';\nimport { auth, createUserProfileDocument } from '../firebase/firebase.utils'; // styles.\n\nimport '../styles/signUp.scss';\n\nconst SignUp = () => {\n  const [credentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }); // const { displayName, email, password, confirmPassword } = credentials;\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (credentials['password'] !== credentials['confirmPassword']) {\n      alert(`passwords don't match`);\n      return;\n    } else {\n      try {\n        const {\n          user\n        } = auth.createUserWithEmailAndPassword(credentials['email'], credentials['password']);\n        await createUserProfileDocument(user); // empty input fields.\n\n        setCredentials({\n          displayName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    setCredentials({ ...credentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: credentials.displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: credentials.email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: credentials['password'],\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: credentials['confirmPassword'],\n    handleChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"SIGN UP\")));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/projects/clothing/src/components/SignUp.js"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","credentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","evt","preventDefault","alert","user","createUserWithEmailAndPassword","error","console","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport FormInput from './FormInput';\r\nimport CustomButton from './CustomButton';\r\nimport { auth, createUserProfileDocument } from '../firebase/firebase.utils';\r\n// styles.\r\nimport '../styles/signUp.scss';\r\n\r\nconst SignUp = () => {\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    // const { displayName, email, password, confirmPassword } = credentials;\r\n\r\n    const handleSubmit = async evt => {\r\n        evt.preventDefault();\r\n\r\n        \r\n        if(credentials['password'] !== credentials['confirmPassword']) {\r\n            alert(`passwords don't match`);\r\n            return;\r\n        } else {\r\n            try {\r\n                const { user } = auth.createUserWithEmailAndPassword(credentials['email'], credentials['password']);\r\n\r\n                await createUserProfileDocument(user);\r\n                // empty input fields.\r\n                setCredentials({\r\n                    displayName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                })\r\n            } catch(error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    };\r\n    \r\n    const handleChange = evt => {\r\n        const{ name, value} = evt.target;\r\n\r\n        setCredentials({...credentials, [name]: value })\r\n    };\r\n\r\n    return (\r\n        <div className=\"sign-up\">\r\n            <h2 className=\"title\">I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n                <FormInput \r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    value={credentials.displayName}\r\n                    handleChange={handleChange}\r\n                    label=\"Display Name\"\r\n                    required\r\n                />\r\n                <FormInput \r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={credentials.email}\r\n                    handleChange={handleChange}\r\n                    label=\"Email\"\r\n                    required\r\n                />\r\n                <FormInput \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={credentials['password']}\r\n                    handleChange={handleChange}\r\n                    label=\"Password\"\r\n                    required\r\n                />\r\n                <FormInput \r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={credentials['confirmPassword']}\r\n                    handleChange={handleChange}\r\n                    label=\"Confirm Password\"\r\n                    required\r\n                />\r\n                <CustomButton type='submit'>SIGN UP</CustomButton>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}