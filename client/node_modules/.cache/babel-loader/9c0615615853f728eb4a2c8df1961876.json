{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\clothing\\\\src\\\\pages\\\\ShopPage.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CategoriesOverview from '../components/CategoriesOverview';\nimport CategoryPage from './CategoryPage';\nimport { firestore, convertCollectionsSnapshotToMap } from '../firebase/firebase.utils';\nimport { updateCollections } from '../redux/actions/shop';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // Dispatch updateCollections action.\n\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CategoriesOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      component: CategoryPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n;\nconst mapDispatchToProps = {\n  updateCollections\n};\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/projects/clothing/src/pages/ShopPage.js"],"names":["React","Route","connect","CategoriesOverview","CategoryPage","firestore","convertCollectionsSnapshotToMap","updateCollections","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,4BAA3D;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA,SAMnCC,uBANmC,GAMT,IANS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEN,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD,CADuC,CAEvC;;AACAX,MAAAA,iBAAiB,CAACY,cAAD,CAAjB;AACH,KAJD;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEnB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEkB,KAAK,CAACC,IAAK,cAA3B;AAA0C,MAAA,SAAS,EAAElB,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AA3BkC;;AA4BtC;AAED,MAAMmB,kBAAkB,GAAI;AACxBhB,EAAAA;AADwB,CAA5B;AAKA,eAAeL,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CategoriesOverview from '../components/CategoriesOverview';\nimport CategoryPage from './CategoryPage';\nimport { firestore, convertCollectionsSnapshotToMap } from '../firebase/firebase.utils';\nimport { updateCollections } from '../redux/actions/shop';\n\nclass ShopPage extends React.Component {\n    // component state.\n    state = {\n        loading: true\n    };\n    \n    unsubscribeFromSnapshot = null;\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            // Dispatch updateCollections action.\n            updateCollections(collectionsMap);\n        })\n\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n            <div className=\"shop-page\">\n                <Route exact path={`${match.path}`} component={CategoriesOverview} />\n                <Route path={`${match.path}/:categoryId`} component={CategoryPage} />\n            </div>\n        )\n\n    }\n};\n\nconst mapDispatchToProps = ({\n    updateCollections\n});\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}